/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnAuthImport } from './routes/_unAuth'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth.index'
import { Route as UnAuthLoginImport } from './routes/_unAuth.login'
import { Route as AuthWalletImport } from './routes/_auth.wallet'
import { Route as AuthStatisticsImport } from './routes/_auth.statistics'
import { Route as AuthPaymentsImport } from './routes/_auth.payments'
import { Route as AuthMessagesImport } from './routes/_auth.messages'
import { Route as AuthCommentsImport } from './routes/_auth.comments'

// Create/Update Routes

const UnAuthRoute = UnAuthImport.update({
  id: '/_unAuth',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth.index.lazy').then((d) => d.Route))

const UnAuthLoginRoute = UnAuthLoginImport.update({
  path: '/login',
  getParentRoute: () => UnAuthRoute,
} as any).lazy(() => import('./routes/_unAuth.login.lazy').then((d) => d.Route))

const AuthWalletRoute = AuthWalletImport.update({
  path: '/wallet',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth.wallet.lazy').then((d) => d.Route))

const AuthStatisticsRoute = AuthStatisticsImport.update({
  path: '/statistics',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth.statistics.lazy').then((d) => d.Route),
)

const AuthPaymentsRoute = AuthPaymentsImport.update({
  path: '/payments',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth.payments.lazy').then((d) => d.Route),
)

const AuthMessagesRoute = AuthMessagesImport.update({
  path: '/messages',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth.messages.lazy').then((d) => d.Route),
)

const AuthCommentsRoute = AuthCommentsImport.update({
  path: '/comments',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth.comments.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_unAuth': {
      id: '/_unAuth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnAuthImport
      parentRoute: typeof rootRoute
    }
    '/_auth/comments': {
      id: '/_auth/comments'
      path: '/comments'
      fullPath: '/comments'
      preLoaderRoute: typeof AuthCommentsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/messages': {
      id: '/_auth/messages'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof AuthMessagesImport
      parentRoute: typeof AuthImport
    }
    '/_auth/payments': {
      id: '/_auth/payments'
      path: '/payments'
      fullPath: '/payments'
      preLoaderRoute: typeof AuthPaymentsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/statistics': {
      id: '/_auth/statistics'
      path: '/statistics'
      fullPath: '/statistics'
      preLoaderRoute: typeof AuthStatisticsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/wallet': {
      id: '/_auth/wallet'
      path: '/wallet'
      fullPath: '/wallet'
      preLoaderRoute: typeof AuthWalletImport
      parentRoute: typeof AuthImport
    }
    '/_unAuth/login': {
      id: '/_unAuth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnAuthLoginImport
      parentRoute: typeof UnAuthImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({
    AuthCommentsRoute,
    AuthMessagesRoute,
    AuthPaymentsRoute,
    AuthStatisticsRoute,
    AuthWalletRoute,
    AuthIndexRoute,
  }),
  UnAuthRoute: UnAuthRoute.addChildren({ UnAuthLoginRoute }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_unAuth"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/comments",
        "/_auth/messages",
        "/_auth/payments",
        "/_auth/statistics",
        "/_auth/wallet",
        "/_auth/"
      ]
    },
    "/_unAuth": {
      "filePath": "_unAuth.tsx",
      "children": [
        "/_unAuth/login"
      ]
    },
    "/_auth/comments": {
      "filePath": "_auth.comments.tsx",
      "parent": "/_auth"
    },
    "/_auth/messages": {
      "filePath": "_auth.messages.tsx",
      "parent": "/_auth"
    },
    "/_auth/payments": {
      "filePath": "_auth.payments.tsx",
      "parent": "/_auth"
    },
    "/_auth/statistics": {
      "filePath": "_auth.statistics.tsx",
      "parent": "/_auth"
    },
    "/_auth/wallet": {
      "filePath": "_auth.wallet.tsx",
      "parent": "/_auth"
    },
    "/_unAuth/login": {
      "filePath": "_unAuth.login.tsx",
      "parent": "/_unAuth"
    },
    "/_auth/": {
      "filePath": "_auth.index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
